~~
~~ Copyright 2016 Function1, Inc. All Rights Reserved.
~~
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~
~~    http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~

Highlights: GSF Annotations

    One of the GSF's coolest features is how it leverages annotations for simplifying extremely frequent tasks on any WCS-related project such as ICS variable binding and manipulation.
    
    Some of those annotations have been underutilized along the years, mostly due to their not being properly documented (read "advertised")
    
    There are essentially 4 GSF-specific annotations which facilitate different tasks, ranging from automatic DAO initialization and injection onto Actions (and now, WCS' own Controllers) to automatic binding of ICS variables to bean properties (e.g. fields):
    
    * {{{@ServiceProducer Annotation} @ServiceProducer}}
    
    * {{{@InjectForRequest Annotation} @InjectForRequest}}
    
    * {{{@Bind Annotation} @Bind}}
    
    * {{{@Mapping Annotation} @Mapping}}
    
    []

@ServiceProducer Annotation
    
	Services are initialized by means of the Object Factory mechanism.
	
	A Service is exposed via the corresponding <<ServiceProducer method>> in the ObjectFactory implementation being used (be that IcsObjectFactory or any other).
	
	A method must be <<annotated as @ServiceProducer>> in order to be treated as such.
	
	ServiceProducer methods instantiate and return an instance of the corresponding Service (provider).
	
	The Service is instantiated by a ServiceProducer.

@InjectForRequest Annotation
    
	TO DO: describe this annotation

@Bind Annotation
    
	TO DO: describe this annotation

@Mapping Annotation

	TO DO: describe this annotation

